ggplot(aes(x=BasePay, y=TotalPay)) +
geom_hex(bins=50) +
scale_x_log10() +
scale_y_log10()
sf_df %>%
ggplot(aes(x=BasePay, y=TotalPay)) +
geom_hex(bins=50) +
scale_x_log10(scales::comma) +
scale_y_log10(scales::comma)
sf_df %>%
ggplot(aes(x=BasePay, y=TotalPay)) +
geom_hex(bins=50) +
scale_x_log10(scales::comma()) +
scale_y_log10(scales::comma())
sf_df %>%
ggplot(aes(x=BasePay, y=TotalPay)) +
geom_hex(bins=50) +
scale_x_sqrt(scales::comma) +
scale_y_sqrt(scales::comma)
sf_df %>%
ggplot(aes(x=BasePay, y=TotalPay)) +
geom_hex(bins=50) +
scale_x_sqrt() +
scale_y_sqrt()
sf_df %>%
ggplot(aes(x=BasePay, y=TotalPay)) +
geom_hex(bins=50) +
scale_x_sqrt(scales::comma) +
scale_y_sqrt()
install.packages("scales")
sf_df %>%
ggplot(aes(x=BasePay, y=TotalPay)) +
geom_hex(bins=50) +
scale_x_sqrt(scales::comma) +
scale_y_sqrt()
sf_df %>%
ggplot(aes(x=BasePay, y=TotalPay)) +
geom_hex(bins=50) +
scale_x_sqrt(labels = scales::comma) +
scale_y_sqrt()
sf_df %>%
ggplot(aes(x=BasePay, y=TotalPay)) +
geom_hex(bins=50) +
scale_x_sqrt(labels = scales::comma) +
scale_y_sqrt(labels = scales::comma)
sf_df %>%
ggplot(aes(x=BasePay, y=TotalPay)) +
geom_hex(bins=100) +
scale_x_sqrt(labels = scales::comma) +
scale_y_sqrt(labels = scales::comma)
scatterplot_g <- sf_df %>%
ggplot(aes(x=BasePay, y=TotalPay)) +
geom_point(alpha=0.1) +
scale_x_sqrt(labels = scales::comma) +
scale_y_sqrt(labels = scales::comma)
scatterplot_g
hex_g <- sf_df %>%
ggplot(aes(x=BasePay, y=TotalPay)) +
geom_hex(bins=100) +
scale_x_sqrt(labels = scales::comma) +
scale_y_sqrt(labels = scales::comma)
hex_g
sf_df
sf_df %>%
count(Agency)
sf_df %>%
count(JobTitle)
sf_df %>%
count(Notes)
View(sf_df)
sf_df %>% count(Status)
sf_df %>%
select(-Agency, -Notes, -Status, -Benefits, -TotalPayBenefits, -JobTitle, -Id) %>%
gather(항목, 금액, -Year, -EmployeeName)
sf_tidy_df <- sf_df %>%
select(-Agency, -Notes, -Status, -Benefits, -TotalPayBenefits, -JobTitle, -Id) %>%
gather(항목, 금액, -Year, -EmployeeName)
sf_tidy_df <- sf_df %>%
select(-Agency, -Notes, -Status, -Benefits, -TotalPayBenefits, -JobTitle, -Id) %>%
gather(`항목`, `금액`, -Year, -EmployeeName)
sf_tidy_df %>%
group_by(Year, `항목`) %>%
summarise(median_dollar = median(`금액`))
sf_tidy_df %>%
group_by(Year, `항목`) %>%
summarise(median_dollar = mean(`금액`, na.rm = TRUE))
sf_salary_summary_df <- sf_tidy_df %>%
group_by(Year, `항목`) %>%
summarise(`평균연봉` = mean(`금액`, na.rm = TRUE))
sf_salary_summary_df
sf_salary_summary_df %>%
ggplot(aes(x=Year, y=`평균연봉`)) +
geom_point() +
facet_grid(~ 항목)
sf_salary_summary_df %>%
ggplot(aes(x=Year, y=`평균연봉`)) +
geom_point() +
geom_line() +
facet_grid(~ 항목)
sf_salary_summary_df %>%
ggplot(aes(x=Year, y=`평균연봉`)) +
geom_point() +
geom_line() +
facet_grid(~ `항목`) +
coord_fixed(ratio = 0.4)
sf_salary_summary_df %>%
ggplot(aes(x=Year, y=`평균연봉`)) +
geom_point() +
geom_line() +
facet_grid(~ `항목`) +
coord_fixed(ratio = 0.7)
sf_salary_summary_df %>%
ggplot(aes(x=Year, y=`평균연봉`)) +
geom_point() +
geom_line() +
facet_grid(~ `항목`) +
coord_fixed(ratio = 1)
sf_salary_summary_df %>%
ggplot(aes(x=Year, y=`평균연봉`)) +
geom_point() +
geom_line() +
facet_grid(~ `항목`) +
coord_fixed(ratio = 2)
sf_salary_summary_df %>%
ggplot(aes(x=Year, y=`평균연봉`)) +
geom_point() +
geom_line() +
facet_grid(~ `항목`)
sf_salary_summary_df %>%
ggplot(aes(x=Year, y=`평균연봉`)) +
geom_point() +
geom_line(size=2) +
facet_grid(~ `항목`)
sf_salary_summary_df %>%
ggplot(aes(x=Year, y=`평균연봉`)) +
geom_point(size=3, color="black") +
geom_line(size=2, color="darkgray") +
facet_grid(~ `항목`)
sf_salary_summary_df %>%
ggplot(aes(x=Year, y=`평균연봉`)) +
geom_line(size=2, color="darkgray") +
geom_point(size=3, color="black") +
facet_grid(~ `항목`)
sf_salary_summary_df %>%
ggplot(aes(x=Year, y=`평균연봉`)) +
geom_line(size=2, color="darkgray") +
geom_point(size=3, color="black") +
facet_wrap(~ `항목`)
sf_salary_summary_df %>%
ggplot(aes(x=Year, y=`평균연봉`)) +
geom_line(size=2, color="darkgray") +
geom_point(size=3, color="black") +
facet_wrap(~ `항목`, nrow=1)
? geom_qq
sf_tidy_df
sf_tidy_df %>%
ggplot(aes(x=금액, color= Year)) +
geom_qq() +
facet_wrap(~Year)
sf_tidy_df %>%
ggplot(aes(sample=금액, color= Year)) +
geom_qq() +
facet_wrap(~Year)
sf_tidy_df %>%
ggplot(aes(sample=`금액`, color= as.factor(Year))) +
geom_qq() +
facet_wrap(~Year)
sf_tidy_df %>%
sample_frac(0.1) %>%
ggplot(aes(sample=`금액`, color= as.factor(Year))) +
geom_qq() +
facet_wrap(~Year)
sf_tidy_df %>%
sample_frac(0.1) %>%
ggplot(aes(sample=`금액`, color= as.factor(Year))) +
geom_qq()
sf_tidy_df
sf_tidy_df %>%
sample_frac(0.1) %>%
ggplot(aes(sample=`금액`, color= as.factor(Year))) +
geom_qq() +
facet_wrap(~`항목`)
library(trelliscopejs)
gapminder %>%
ggplot(aes(x=year, y=lifeExp, color=continent)) +
geom_line()
gapminder %>%
ggplot(aes(x=year, y=lifeExp, color=continent)) +
geom_line() +
facet_wrap(~contienent)
gapminder %>%
ggplot(aes(x=year, y=lifeExp, color=continent)) +
geom_line() +
facet_wrap(~continent)
gapminder %>%
ggplot(aes(x=year, y=lifeExp, color=country)) +
geom_line() +
facet_wrap(~continent)
gapminder %>%
ggplot(aes(x=year, y=lifeExp, group=country)) +
geom_line() +
facet_wrap(~continent)
gapminder %>%
ggplot(aes(x = year, y = lifeExp, group = country, color = country)) +
geom_line() +
facet_wrap(~continent)
gapminder %>%
ggplot(aes(x = year, y = lifeExp, group = country)) +
geom_line() +
facet_wrap(~continent)
gapminder %>%
ggplot(aes(x = year, y = lifeExp, group = country, color = continent)) +
geom_line() +
facet_wrap(~continent)
gapminder %>%
ggplot(aes(x = year, y = lifeExp, group = country, color = continent)) +
geom_line() +
facet_wrap(~continent) +
guides(color = FALSE)
gapminder %>%
ggplot(aes(x = year, y = lifeExp, group = country, color = continent)) +
geom_line() +
facet_wrap(~continent+continent) +
guides(color = FALSE)
gapminder %>%
ggplot(aes(x = year, y = lifeExp, group = country)) +
geom_line() +
facet_wrap(~continent+continent) +
guides(color = FALSE)
gapminder %>%
ggplot(aes(x = year, y = lifeExp, group = country)) +
geom_line() +
facet_wrap(~country+continent) +
guides(color = FALSE)
gapminder %>%
ggplot(aes(x = year, y = lifeExp)) +
geom_line() +
facet_wrap(~country+continent) +
guides(color = FALSE)
ggplot(gapminder, aes(x = year, y = lifeExp)) +
geom_line() +
facet_trelliscope(~ country + continent)
ggplot(gapminder, aes(x = year, y = lifeExp)) +
geom_line() +
geom_point() +
facet_trelliscope(~ country + continent,
nrow=3, ncol=4,
plot_ly = TRUE)
ggplot(gapminder, aes(x = year, y = lifeExp)) +
geom_line() +
geom_point() +
facet_trelliscope(~ country + continent,
nrow=3, ncol=4,
as_plotly = TRUE)
ggplot(gapminder, aes(x = year, y = lifeExp)) +
geom_line() +
geom_point() +
facet_trelliscope(~ country + continent,
nrow=3, ncol=4,
as_plotly = TRUE,
auto_cog = TRUE)
library(ggplot2)
city_names <- c(
"Tokyo (東京/도쿄)",
"Yokohama (横浜/요코하마)",
"Osaka (大阪市/오사카)",
"Nagoya (名古屋市/나고야)",
"Sapporo (札幌市/사포르)",
"Kobe (神戸市/고베)",
"Kyoto (京都市/교토)",
"Fukuoka (福岡市/후쿠시마)",
"Kawasaki (川崎市/가와사키)",
"Saitama (さいたま市/사이타마)"
)
main_cities <- data.frame(
name = city_names,
lat = c(35.690, 35.444, 34.694, 35.183, 43.067,
34.69, 35.012, 33.583, 35.517, 35.861),
lon = c(139.692, 139.638, 135.502, 136.9, 141.35,
135.196, 135.768, 130.4, 139.7, 139.646)
)
japan <- rnaturalearth::ne_countries(
scale = 10,
country = "Japan",
returnclass = "sf"
)
ggplot() +
geom_sf(
data = japan,
fill = "forestgreen",
colour = "grey10",
size = 0.2
) +
ggrepel::geom_label_repel(
aes(lon, lat, label = name),
data = main_cities,
fill = "#FFFFFF88",
box.padding = unit(5, "mm")
) +
geom_point(aes(lon, lat), main_cities) +
ggtitle(
"Location of largest cities in Japan (日本) 🇯🇵"
) +
theme_void() +
theme(panel.background = element_rect("steelblue"),
plot.title = element_text(margin = margin(5, 0, 5, 0)))
japan <- rnaturalearth::ne_countries(
scale = 10,
country = "Japan",
returnclass = "sf"
)
install.packages("rnaturalearth")
library(ggplot2)
city_names <- c(
"Tokyo (東京/도쿄)",
"Yokohama (横浜/요코하마)",
"Osaka (大阪市/오사카)",
"Nagoya (名古屋市/나고야)",
"Sapporo (札幌市/사포르)",
"Kobe (神戸市/고베)",
"Kyoto (京都市/교토)",
"Fukuoka (福岡市/후쿠시마)",
"Kawasaki (川崎市/가와사키)",
"Saitama (さいたま市/사이타마)"
)
main_cities <- data.frame(
name = city_names,
lat = c(35.690, 35.444, 34.694, 35.183, 43.067,
34.69, 35.012, 33.583, 35.517, 35.861),
lon = c(139.692, 139.638, 135.502, 136.9, 141.35,
135.196, 135.768, 130.4, 139.7, 139.646)
)
japan <- rnaturalearth::ne_countries(
scale = 10,
country = "Japan",
returnclass = "sf"
)
japan <- rnaturalearth::ne_countries(
scale = 10,
country = "Japan",
returnclass = "sf"
)
install.packages("rnaturalearthhires", repos = "http://packages.ropensci.org", type = "source")
japan <- rnaturalearth::ne_countries(
scale = 10,
country = "Japan",
returnclass = "sf"
)
.libPaths()
japan <- rnaturalearth::ne_countries(
scale = 10,
country = "Japan",
returnclass = "sf"
)
install.packages("rnaturalearthhires")
devtools::install_github("ropensci/rnaturalearthhires")
japan <- rnaturalearth::ne_countries(
scale = 10,
country = "Japan",
returnclass = "sf"
)
library(ggplot2)
city_names <- c(
"Tokyo (東京/도쿄)",
"Yokohama (横浜/요코하마)",
"Osaka (大阪市/오사카)",
"Nagoya (名古屋市/나고야)",
"Sapporo (札幌市/사포르)",
"Kobe (神戸市/고베)",
"Kyoto (京都市/교토)",
"Fukuoka (福岡市/후쿠시마)",
"Kawasaki (川崎市/가와사키)",
"Saitama (さいたま市/사이타마)"
)
main_cities <- data.frame(
name = city_names,
lat = c(35.690, 35.444, 34.694, 35.183, 43.067,
34.69, 35.012, 33.583, 35.517, 35.861),
lon = c(139.692, 139.638, 135.502, 136.9, 141.35,
135.196, 135.768, 130.4, 139.7, 139.646)
)
japan <- rnaturalearth::ne_countries(
scale = 10,
country = "Japan",
returnclass = "sf"
)
ggplot() +
geom_sf(
data = japan,
fill = "forestgreen",
colour = "grey10",
size = 0.2
) +
ggrepel::geom_label_repel(
aes(lon, lat, label = name),
data = main_cities,
fill = "#FFFFFF88",
box.padding = unit(5, "mm")
) +
geom_point(aes(lon, lat), main_cities) +
ggtitle(
"Location of largest cities in Japan (日本) 🇯🇵"
) +
theme_void() +
theme(panel.background = element_rect("steelblue"),
plot.title = element_text(margin = margin(5, 0, 5, 0)))
ggplot() +
geom_sf(
data = japan,
fill = "forestgreen",
colour = "grey10",
size = 0.2
) +
ggrepel::geom_label_repel(
aes(lon, lat, label = name),
data = main_cities,
fill = "#FFFFFF88",
box.padding = unit(5, "mm"),
family = "Arial"
) +
geom_point(aes(lon, lat), main_cities) +
ggtitle(
"Location of largest cities in Japan (日本) 🇯🇵"
) +
theme_void() +
theme(panel.background = element_rect("steelblue"),
plot.title = element_text(margin = margin(5, 0, 5, 0)))
ggplot() +
geom_sf(
data = japan,
fill = "forestgreen",
colour = "grey10",
size = 0.2
) +
ggrepel::geom_label_repel(
aes(lon, lat, label = name),
data = main_cities,
fill = "#FFFFFF88",
box.padding = unit(5, "mm"),
family = "NanumGothic"
) +
geom_point(aes(lon, lat), main_cities) +
ggtitle(
"Location of largest cities in Japan (日本) 🇯🇵"
) +
theme_void() +
theme(panel.background = element_rect("steelblue"),
plot.title = element_text(margin = margin(5, 0, 5, 0)))
ggplot() +
geom_sf(
data = japan,
fill = "forestgreen",
colour = "grey10",
size = 0.2
) +
ggrepel::geom_label_repel(
aes(lon, lat, label = name),
data = main_cities,
fill = "#FFFFFF88",
box.padding = unit(5, "mm"),
family = "NanumGothic"
) +
geom_point(aes(lon, lat), main_cities) +
ggtitle(
"Location of largest cities in Japan (日本) 🇯🇵",
family = "NanumGothic"
) +
theme_void() +
theme(panel.background = element_rect("steelblue"),
plot.title = element_text(margin = margin(5, 0, 5, 0)))
ggplot() +
geom_sf(
data = japan,
fill = "forestgreen",
colour = "grey10",
size = 0.2
) +
ggrepel::geom_label_repel(
aes(lon, lat, label = name),
data = main_cities,
fill = "#FFFFFF88",
box.padding = unit(5, "mm"),
family = "NanumGothic"
) +
geom_point(aes(lon, lat), main_cities) +
ggtitle(
"Location of largest cities in Japan (日本) 🇯🇵"
) +
theme_void(family = "NanumGothic") +
theme(panel.background = element_rect("steelblue"),
plot.title = element_text(margin = margin(5, 0, 5, 0)))
ggplot() +
geom_sf(
data = japan,
fill = "forestgreen",
colour = "grey10",
size = 0.2
) +
ggrepel::geom_label_repel(
aes(lon, lat, label = name),
data = main_cities,
fill = "#FFFFFF88",
box.padding = unit(5, "mm"),
family = "NanumGothic"
) +
geom_point(aes(lon, lat), main_cities) +
ggtitle(
"Location of largest cities in Japan (日本) 🇯🇵"
) +
theme_void(base_family = "NanumGothic") +
theme(panel.background = element_rect("steelblue"),
plot.title = element_text(margin = margin(5, 0, 5, 0)))
