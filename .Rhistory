Country = c("South Korea", "USA", "Japan", "United Kingdom", "Taiwan"),
Region = "All") %>%
# 변수명과 자료형 작업
as_tibble() %>%
janitor::clean_names(.) %>%
mutate(date = dmy(date)) %>%
# 분석에 필수 변수만 추리는 작업
select(date, country, measure, value) %>%
# 변수 가독성 향상 작업
mutate(measure = ifelse(measure == "Cases", "확진", "사망"))
five_tbl
five_tbl <- subset_covid(inputDB,
Country = c("South Korea", "USA", "Japan", "United Kingdom", "Taiwan"),
Region = "All") %>%
# 변수명과 자료형 작업
as_tibble() %>%
janitor::clean_names(.) %>%
mutate(date = dmy(date)) %>%
# 분석에 필수 변수만 추리는 작업
select(date, country, measure, value) %>%
# 변수 가독성 향상 작업
mutate(measure = ifelse(measure == "Cases", "확진", "사망"))  %>%
filter(measure == "사망")
five_tbl
death_tbl <- subset_covid(inputDB,
Country = c("South Korea", "USA", "Japan", "United Kingdom", "Taiwan"),
Region = "All") %>%
# 변수명과 자료형 작업
as_tibble() %>%
janitor::clean_names(.) %>%
mutate(date = dmy(date)) %>%
# 분석에 필수 변수만 추리는 작업
select(date, country, measure, value) %>%
# 변수 가독성 향상 작업
mutate(measure = ifelse(measure == "Cases", "확진", "사망"))  %>%
filter(measure == "사망")
death_tbl
death_tbl
vaccine_tbl
? countrycode
death_tbl <- subset_covid(inputDB,
Country = c("South Korea", "USA", "Japan", "United Kingdom", "Taiwan"),
Region = "All") %>%
# 변수명과 자료형 작업
as_tibble() %>%
janitor::clean_names(.) %>%
mutate(date = dmy(date)) %>%
# 분석에 필수 변수만 추리는 작업
select(date, country, measure, value) %>%
# 변수 가독성 향상 작업
mutate(measure = ifelse(measure == "Cases", "확진", "사망"))  %>%
filter(measure == "사망") %>%
mutate(ISO2 = countrycode(country, origin = 'cown', destination = 'iso2c'))
death_tbl
death_tbl <- subset_covid(inputDB,
Country = c("South Korea", "USA", "Japan", "United Kingdom", "Taiwan"),
Region = "All") %>%
# 변수명과 자료형 작업
as_tibble() %>%
janitor::clean_names(.) %>%
mutate(date = dmy(date)) %>%
# 분석에 필수 변수만 추리는 작업
select(date, country, measure, value) %>%
# 변수 가독성 향상 작업
mutate(measure = ifelse(measure == "Cases", "확진", "사망"))  %>%
filter(measure == "사망") %>%
mutate(ISO2 = countrycode(country, origin = 'country.name', destination = 'iso2c'))
death_tbl
merge_tbl <- left_join(death_tbl, vaccine_tbl, by = c("ISO2", date))
merge_tbl
death_tbl
vaccine_tbl
merge_tbl <- left_join(death_tbl, vaccine_tbl, by = c("ISO2", "date"))
merge_tbl
vaccine_tbl <- vaccine %>%
mutate(ISO2 = countrycode(iso_code,
origin = 'iso3c',
destination = 'iso2c')) %>%
select(location,
ISO2,
date,
total_vaccinations,
people_vaccinated,
people_fully_vaccinated,
daily_vaccinations_raw) %>%
# filter(str_detect(ISO2, "KR|JP|US|GB")) %>%
filter(str_detect(ISO2, "KR|JP|TW|GB|US")) %>%
group_by(ISO2) %>%
arrange(date) %>%
mutate(total_vaccinations = zoo::na.locf(total_vaccinations)) %>%
select(date, country, ISO2, location, vaccinations = total_vaccinations) %>%
group_by(country) %>%
arrange(date) %>%
ungroup()
vaccine_tbl %>%
reactable::reactable()
merge_tbl <- left_join(death_tbl, vaccine_tbl, by = c("ISO2", "date")) %>%
mutate(country  = case_when(str_detect(location, "Korea") ~ "한국",
str_detect(location, "United States") ~ "미국",
str_detect(location, "United Kingdom") ~ "영국",
str_detect(location, "Japan") ~ "일본",
str_detect(location, "Taiwan") ~ "대만"))
merge_tbl
merge_tbl <- left_join(death_tbl, vaccine_tbl, by = c("ISO2", "date"))
merge_tbl
death_tbl
vaccine_tbl
library(tidyverse)
library(countrycode)
library(lubridate)
library(extrafont)
loadfonts()
download.file(url = "https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/vaccinations/vaccinations.csv",
destfile = "data/vaccinations.csv")
vaccine <- read_csv("data/vaccinations.csv",
col_types= "ccDddddddddd")
vaccine_tbl <- vaccine %>%
mutate(ISO2 = countrycode(iso_code,
origin = 'iso3c',
destination = 'iso2c')) %>%
select(location,
ISO2,
date,
total_vaccinations,
people_vaccinated,
people_fully_vaccinated,
daily_vaccinations_raw) %>%
# filter(str_detect(ISO2, "KR|JP|US|GB")) %>%
filter(str_detect(ISO2, "KR|JP|TW|GB|US")) %>%
group_by(ISO2) %>%
arrange(date) %>%
mutate(total_vaccinations = zoo::na.locf(total_vaccinations)) %>%
select(date, country, ISO2, location, vaccinations = total_vaccinations) %>%
group_by(country) %>%
arrange(date) %>%
ungroup()
vaccine_tbl %>%
reactable::reactable()
vaccine_tbl <- vaccine %>%
mutate(ISO2 = countrycode(iso_code,
origin = 'iso3c',
destination = 'iso2c')) %>%
select(location,
ISO2,
date,
total_vaccinations,
people_vaccinated,
people_fully_vaccinated,
daily_vaccinations_raw) %>%
# filter(str_detect(ISO2, "KR|JP|US|GB")) %>%
filter(str_detect(ISO2, "KR|JP|TW|GB|US")) %>%
group_by(ISO2) %>%
arrange(date) %>%
mutate(total_vaccinations = zoo::na.locf(total_vaccinations)) %>%
select(date, ISO2, location, vaccinations = total_vaccinations) %>%
group_by(country) %>%
arrange(date) %>%
ungroup()
vaccine_tbl <- vaccine %>%
mutate(ISO2 = countrycode(iso_code,
origin = 'iso3c',
destination = 'iso2c')) %>%
select(location,
ISO2,
date,
total_vaccinations,
people_vaccinated,
people_fully_vaccinated,
daily_vaccinations_raw) %>%
# filter(str_detect(ISO2, "KR|JP|US|GB")) %>%
filter(str_detect(ISO2, "KR|JP|TW|GB|US")) %>%
group_by(ISO2) %>%
arrange(date) %>%
mutate(total_vaccinations = zoo::na.locf(total_vaccinations)) %>%
select(date, ISO2, location, vaccinations = total_vaccinations)
vaccine_tbl %>%
reactable::reactable()
merge_tbl <- left_join(death_tbl, vaccine_tbl, by = c("ISO2", "date")) %>%
mutate(country  = case_when(str_detect(location, "Korea") ~ "한국",
str_detect(location, "United States") ~ "미국",
str_detect(location, "United Kingdom") ~ "영국",
str_detect(location, "Japan") ~ "일본",
str_detect(location, "Taiwan") ~ "대만"))
merge_tbl
death_tbl
vaccine_tbl
vaccine_tbl <- vaccine %>%
mutate(ISO2 = countrycode(iso_code,
origin = 'iso3c',
destination = 'iso2c')) %>%
select(location,
ISO2,
date,
total_vaccinations,
people_vaccinated,
people_fully_vaccinated,
daily_vaccinations_raw) %>%
# filter(str_detect(ISO2, "KR|JP|US|GB")) %>%
filter(str_detect(ISO2, "KR|JP|TW|GB|US")) %>%
group_by(ISO2) %>%
arrange(date) %>%
mutate(total_vaccinations = zoo::na.locf(total_vaccinations)) %>%
select(date, ISO2, country = location, vaccinations = total_vaccinations)
vaccine_tbl %>%
reactable::reactable()
death_tbl
vaccine_tbl
merge_tbl <- left_join(death_tbl, vaccine_tbl, by = c("ISO2", "date", "country")) %>%
mutate(country  = case_when(str_detect(location, "Korea") ~ "한국",
str_detect(location, "United States") ~ "미국",
str_detect(location, "United Kingdom") ~ "영국",
str_detect(location, "Japan") ~ "일본",
str_detect(location, "Taiwan") ~ "대만"))
merge_tbl <- left_join(death_tbl, vaccine_tbl, by = c("ISO2", "date", "country"))
merge_tbl
death_tbl
death_tbl <- subset_covid(inputDB,
Country = c("South Korea", "USA", "Japan", "United Kingdom", "Taiwan"),
Region = "All") %>%
# 변수명과 자료형 작업
as_tibble() %>%
janitor::clean_names(.) %>%
mutate(date = dmy(date)) %>%
# 분석에 필수 변수만 추리는 작업
select(date, country, measure, value) %>%
# 변수 가독성 향상 작업
mutate(measure = ifelse(measure == "Cases", "확진", "사망"))  %>%
filter(measure == "사망") %>%
mutate(ISO2 = countrycode(country, origin = 'country.name', destination = 'iso2c')) %>%
select(date, ISO2, country, death = value)
death_tbl
merge_tbl <- left_join(death_tbl, vaccine_tbl, by = c("ISO2", "date", "country")) %>%
mutate(country  = case_when(str_detect(location, "Korea") ~ "한국",
str_detect(location, "United States") ~ "미국",
str_detect(location, "United Kingdom") ~ "영국",
str_detect(location, "Japan") ~ "일본",
str_detect(location, "Taiwan") ~ "대만"))
merge_tbl <- left_join(death_tbl, vaccine_tbl, by = c("ISO2", "date", "country")) %>%
mutate(country  = case_when(str_detect(country, "Korea") ~ "한국",
str_detect(country, "United States") ~ "미국",
str_detect(country, "United Kingdom") ~ "영국",
str_detect(country, "Japan") ~ "일본",
str_detect(country, "Taiwan") ~ "대만"))
merge_tbl
merge_tbl <- left_join(death_tbl, vaccine_tbl, by = c("ISO2", "date", "country")) %>%
mutate(kor_country  = case_when(str_detect(country, "Korea") ~ "한국",
str_detect(country, "United States") ~ "미국",
str_detect(country, "United Kingdom") ~ "영국",
str_detect(country, "Japan") ~ "일본",
str_detect(country, "Taiwan") ~ "대만"))
merge_tbl
merge_tbl <- left_join(death_tbl, vaccine_tbl, by = c("ISO2", "date", "country")) %>%
mutate(country_kor  = case_when(str_detect(country, "Korea") ~ "한국",
str_detect(country, "United States") ~ "미국",
str_detect(country, "United Kingdom") ~ "영국",
str_detect(country, "Japan") ~ "일본",
str_detect(country, "Taiwan") ~ "대만"))
merge_tbl
vaccine_g <- vaccine_tbl %>%
ggplot(aes(x = date, y = total_vaccinations, color = country, group = country)) +
geom_line() +
geom_point(aes(group = seq_along(date))) +
geom_text(aes(label = location, family = "NanumGothic"), hjust = -0.3, size = 3.5) +
scale_y_continuous(labels = scales::comma) +
scale_x_date(date_labels = "%m-%d") +
theme_bw(base_family = "NanumGothic") +
labs(title = "코로나19 일별 접종자수",
x = "",
y = "백신 접종자수",
color = "국가") +
theme(legend.position = "none")
vaccine_g
vaccine_g
vaccine_tbl
vaccine_g <- vaccine_tbl %>%
ggplot(aes(x = date, y = vaccinations, color = country, group = country)) +
geom_line() +
geom_point(aes(group = seq_along(date))) +
geom_text(aes(label = location, family = "NanumGothic"), hjust = -0.3, size = 3.5) +
scale_y_continuous(labels = scales::comma) +
scale_x_date(date_labels = "%m-%d") +
theme_bw(base_family = "NanumGothic") +
labs(title = "코로나19 일별 접종자수",
x = "",
y = "백신 접종자수",
color = "국가") +
theme(legend.position = "none")
vaccine_g
vaccine_tbl %>%
ggplot(aes(x = date, y = vaccinations, color = country, group = country)) +
geom_line()
vaccine_tbl %>%
ggplot(aes(x = date, y = vaccinations, color = country, group = country)) +
geom_line() +
geom_point(aes(group = seq_along(date))) +
geom_text(aes(label = location, family = "NanumGothic"), hjust = -0.3, size = 3.5) +
scale_y_continuous(labels = scales::comma)
library(gganimate)
vaccine_g <- vaccine_tbl %>%
ggplot(aes(x = date, y = vaccinations, color = country, group = country)) +
geom_line() +
geom_point(aes(group = seq_along(date))) +
geom_text(aes(label = location, family = "NanumGothic"), hjust = -0.3, size = 3.5) +
scale_y_continuous(labels = scales::comma) +
scale_x_date(date_labels = "%m-%d") +
theme_bw(base_family = "NanumGothic") +
labs(title = "코로나19 일별 접종자수",
x = "",
y = "백신 접종자수",
color = "국가") +
theme(legend.position = "none")
vaccine_g
vaccine_tbl
vaccine_tbl <- vaccine %>%
mutate(ISO2 = countrycode(iso_code,
origin = 'iso3c',
destination = 'iso2c')) %>%
select(location,
ISO2,
date,
total_vaccinations,
people_vaccinated,
people_fully_vaccinated,
daily_vaccinations_raw) %>%
# filter(str_detect(ISO2, "KR|JP|US|GB")) %>%
filter(str_detect(ISO2, "KR|JP|TW|GB|US")) %>%
group_by(ISO2) %>%
arrange(date) %>%
mutate(total_vaccinations = zoo::na.locf(total_vaccinations)) %>%
select(date, ISO2, country = location, vaccinations = total_vaccinations) %>%
ungrup()
vaccine_tbl <- vaccine %>%
mutate(ISO2 = countrycode(iso_code,
origin = 'iso3c',
destination = 'iso2c')) %>%
select(location,
ISO2,
date,
total_vaccinations,
people_vaccinated,
people_fully_vaccinated,
daily_vaccinations_raw) %>%
# filter(str_detect(ISO2, "KR|JP|US|GB")) %>%
filter(str_detect(ISO2, "KR|JP|TW|GB|US")) %>%
group_by(ISO2) %>%
arrange(date) %>%
mutate(total_vaccinations = zoo::na.locf(total_vaccinations)) %>%
select(date, ISO2, country = location, vaccinations = total_vaccinations) %>%
ungroup()
vaccine_tbl %>%
reactable::reactable()
# remotes::install_github("eshom/covid-age-data")
library(covidAgeData)
# inputDB <- download_covid("inputDB", progress = TRUE)
inputDB <-  read_csv("inputDB.zip",
skip = 1,
col_types = "cccccciccdc")
death_tbl <- subset_covid(inputDB,
Country = c("South Korea", "USA", "Japan", "United Kingdom", "Taiwan"),
Region = "All") %>%
# 변수명과 자료형 작업
as_tibble() %>%
janitor::clean_names(.) %>%
mutate(date = dmy(date)) %>%
# 분석에 필수 변수만 추리는 작업
select(date, country, measure, value) %>%
# 변수 가독성 향상 작업
mutate(measure = ifelse(measure == "Cases", "확진", "사망"))  %>%
filter(measure == "사망") %>%
mutate(ISO2 = countrycode(country, origin = 'country.name', destination = 'iso2c')) %>%
select(date, ISO2, country, death = value)
death_tbl
vaccine_g <- vaccine_tbl %>%
ggplot(aes(x = date, y = vaccinations, color = country, group = country)) +
geom_line() +
geom_point(aes(group = seq_along(date))) +
geom_text(aes(label = location, family = "NanumGothic"), hjust = -0.3, size = 3.5) +
scale_y_continuous(labels = scales::comma) +
scale_x_date(date_labels = "%m-%d") +
theme_bw(base_family = "NanumGothic") +
labs(title = "코로나19 일별 접종자수",
x = "",
y = "백신 접종자수",
color = "국가") +
theme(legend.position = "none")
vaccine_g
merge_tbl <- left_join(death_tbl, vaccine_tbl, by = c("ISO2", "date", "country")) %>%
mutate(country_kor  = case_when(str_detect(country, "Korea") ~ "한국",
str_detect(country, "United States") ~ "미국",
str_detect(country, "United Kingdom") ~ "영국",
str_detect(country, "Japan") ~ "일본",
str_detect(country, "Taiwan") ~ "대만"))
merge_tbl
vaccine_g <- vaccine_tbl %>%
ggplot(aes(x = date, y = vaccinations, color = country, group = country)) +
geom_line() +
geom_point(aes(group = seq_along(date))) +
geom_text(aes(label = location, family = "NanumGothic"), hjust = -0.3, size = 3.5) +
scale_y_continuous(labels = scales::comma) +
scale_x_date(date_labels = "%m-%d") +
theme_bw(base_family = "NanumGothic") +
labs(title = "코로나19 일별 접종자수",
x = "",
y = "백신 접종자수",
color = "국가") +
theme(legend.position = "none")
vaccine_g
vaccine_tbl
vaccine_g <- merge_tbl %>%
ggplot(aes(x = date, y = vaccinations, color = country, group = country)) +
geom_line() +
geom_point(aes(group = seq_along(date))) +
geom_text(aes(label = country, family = "NanumGothic"), hjust = -0.3, size = 3.5) +
scale_y_continuous(labels = scales::comma) +
scale_x_date(date_labels = "%m-%d") +
theme_bw(base_family = "NanumGothic") +
labs(title = "코로나19 일별 접종자수",
x = "",
y = "백신 접종자수",
color = "국가") +
theme(legend.position = "none")
vaccine_g
vaccine_g <- merge_tbl %>%
ggplot(aes(x = date, y = vaccinations, color = country, group = country)) +
geom_line() +
geom_point(aes(group = seq_along(date))) +
# geom_text(aes(label = country, family = "NanumGothic"), hjust = -0.3, size = 3.5) +
scale_y_continuous(labels = scales::comma) +
scale_x_date(date_labels = "%m-%d") +
theme_bw(base_family = "NanumGothic") +
labs(title = "코로나19 일별 접종자수",
x = "",
y = "백신 접종자수",
color = "국가") +
theme(legend.position = "none")
vaccine_g
vaccine_g <- merge_tbl %>%
ggplot(aes(x = date, y = vaccinations, color = country, group = country)) +
geom_line() +
geom_point(aes(group = seq_along(date))) +
# geom_text(aes(label = country, family = "NanumGothic"), hjust = -0.3, size = 3.5) +
scale_y_continuous(labels = scales::comma) +
scale_x_date(date_labels = "%y-%m-%d") +
theme_bw(base_family = "NanumGothic") +
labs(title = "코로나19 일별 접종자수",
x = "",
y = "백신 접종자수",
color = "국가") +
theme(legend.position = "none")
vaccine_g
vaccine_g <- merge_tbl %>%
filter(date >= lubridate::ymd("2021-01-01")) %>%
ggplot(aes(x = date, y = vaccinations, color = country, group = country)) +
geom_line() +
geom_point(aes(group = seq_along(date))) +
# geom_text(aes(label = country, family = "NanumGothic"), hjust = -0.3, size = 3.5) +
scale_y_continuous(labels = scales::comma) +
scale_x_date(date_labels = "%y-%m-%d") +
theme_bw(base_family = "NanumGothic") +
labs(title = "코로나19 일별 접종자수",
x = "",
y = "백신 접종자수",
color = "국가") +
theme(legend.position = "none")
vaccine_g
vaccine_g <- merge_tbl %>%
filter(date >= lubridate::ymd("2021-01-01")) %>%
ggplot(aes(x = date, y = vaccinations, color = country, group = country)) +
geom_line() +
geom_point(aes(group = seq_along(date))) +
geom_text(aes(label = country, family = "NanumGothic"), hjust = -0.3, size = 3.5) +
scale_y_continuous(labels = scales::comma) +
scale_x_date(date_labels = "%y-%m-%d") +
theme_bw(base_family = "NanumGothic") +
labs(title = "코로나19 일별 접종자수",
x = "",
y = "백신 접종자수",
color = "국가") +
theme(legend.position = "none")
vaccine_g
merge_tbl %>%
count(country)
vaccine_g <- merge_tbl %>%
filter(date >= lubridate::ymd("2021-01-01")) %>%
ggplot(aes(x = date, y = vaccinations, color = country, group = country)) +
geom_line() +
geom_point(aes(group = seq_along(date))) +
geom_text(aes(label = country, family = "NanumGothic"), hjust = -0.3, size = 3.5) +
scale_y_continuous(labels = scales::comma) +
scale_x_date(date_labels = "%y-%m-%d") +
theme_bw(base_family = "NanumGothic") +
labs(title = "코로나19 일별 접종자수",
x = "",
y = "백신 접종자수",
color = "국가") +
theme(legend.position = "top")
vaccine_g
vaccine_g <- merge_tbl %>%
filter(date >= lubridate::ymd("2021-01-01")) %>%
ggplot(aes(x = date, y = vaccinations, color = country, group = country)) +
geom_line() +
geom_point() +
geom_text(aes(label = country, family = "NanumGothic"), hjust = -0.3, size = 3.5) +
scale_y_continuous(labels = scales::comma) +
scale_x_date(date_labels = "%y-%m-%d") +
theme_bw(base_family = "NanumGothic") +
labs(title = "코로나19 일별 접종자수",
x = "",
y = "백신 접종자수",
color = "국가") +
theme(legend.position = "top")
vaccine_g
